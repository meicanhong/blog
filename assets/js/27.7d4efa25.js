(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{458:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Trino 是我们的查询引擎，我们通过 trino 可读写不同 catalog 的数据。如今有业务需求引入了 ElasticSearch，需要将 Trino 的数据同步到 es 中。经调研发现 Logstash 满足我们的同步数据需求，于是便探索如果用 logstash 将 trino 的数据同步到 es。")]),t._v(" "),s("h3",{attrs:{id:"logstash-配置参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logstash-配置参考"}},[t._v("#")]),t._v(" Logstash 配置参考")]),t._v(" "),s("p",[t._v("logstash input 支持以 JDBC 方式导入数据，trino 也实现了 jdbc 接口。所以将 trino-jdbc.jar 作为驱动导入即可。详情配置参考：")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("input")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("jdbc")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n    jdbc_driver_library => "/usr/share/logstash/config/trino-jdbc-402.jar"\n    jdbc_driver_class => "io.trino.jdbc.TrinoDriver"\n    jdbc_connection_string => "jdbc:trino://trino-host:443/catalog"\n    jdbc_user => "user"\n    jdbc_password => "password"\n    connection_retry_attempts => "1"\n    jdbc_validation_timeout => "3600"\n    statement_filepath => "/usr/share/logstash/src/your_sql.sql"\n    record_last_run => false\n    schedule => "* * * * *"\n  '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("output 配置没啥好说的，我们是要同步到 es 中，所以 output 配置为 es 即可。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("output")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elasticsearch")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n    index => "table_name"\n    document_type => "_doc"\n    document_id => "%'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("[@metadata][fingerprint]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n    ilm_enabled => false\n    ssl => true\n    cloud_id => "cloud_id"\n    cloud_auth => "auth"\n  '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"同步数据去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步数据去重"}},[t._v("#")]),t._v(" 同步数据去重")]),t._v(" "),s("p",[t._v("按照上面的配置同步数据的话，多次同步会产生重复数据。所以便要考虑去重方案。\nlogstash 的 filter fingerprint 插件可以实现去重效果。原理大概是将唯一键组成字段 hash 后得到哈希值，作为此条数据的 id，在写入 es 时会比较 id 然后选择覆盖或插入数据的操作。")]),t._v(" "),s("p",[t._v('如下配置里，我把源表里的 protocol_slug、chain、on_date 生产唯一键 "[@metadata][fingerprint]"，在 output 时将 document_id 配置为 "[@metadata][fingerprint]" ，就可以避免重复数据的产生。')]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("filter")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mutate")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n        remove_field => ["@timestamp", "@version"]\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fingerprint")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n        source => ["protocol_slug", "chain", "on_date"]\n        target => "[@metadata][fingerprint]"\n        method => "MURMUR3"\n        concatenate_sources => true\n    '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("output")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elasticsearch")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v('\n    index => "table_name"\n    document_id => "%'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("[@metadata][fingerprint]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n    ilm_enabled => false\n    ssl => true\n    cloud_id => "cloud_id"\n    cloud_auth => "auth"\n  '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"logstash-调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logstash-调优"}},[t._v("#")]),t._v(" Logstash 调优")]),t._v(" "),s("p",[t._v("logstash jvm 默认配置的是 1g 的堆内存。我这边通过修改 jvm.options 修改为 8g 内存了，还将栈大小提升到 4m。")]),t._v(" "),s("div",{staticClass:"language-latex extra-class"},[s("pre",{pre:!0,attrs:{class:"language-latex"}},[s("code",[t._v("-Xss4M\n-Xms8g\n-Xmx8g\n")])])]),s("p",[t._v("我这边需要同步多份数据，需要修改 pipelines.yml，改为多个 pipeline 去同步数据。这里还可以给 pipeline 配置worker数量，不过我这边暂时没遇到性能问题，所以没有进行配置。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is where you define your pipelines. You can define multiple.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information on multiple pipelines, see the documentation:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   https://www.elastic.co/guide/en/logstash/current/multiple-pipelines.html")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pipeline.id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pipeline_1\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path.config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/share/logstash/src/config_1.conf"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pipeline.id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pipeline_2\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path.config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/share/logstash/src/config_2.conf"')]),t._v("\n\n")])])]),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("通过以上操作，logstash 能够完成我们实时同步增量数据的需求，并且输入源是 trino，能够很好集成进我们的框架中，是一次不错的生产实践。")]),t._v(" "),s("h3",{attrs:{id:"参考link"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考link"}},[t._v("#")]),t._v(" 参考Link")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/UbuntuTouch/article/details/106639848",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/UbuntuTouch/article/details/106639848"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://trino.io/docs/current/client/jdbc.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://trino.io/docs/current/client/jdbc.html"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://trino.io/docs/current/client/jdbc.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://trino.io/docs/current/client/jdbc.html"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);